---
title: "Análise Exploratória SAEB 2019"
subtitle: "Trabalho de Conclusão de Curso"
author: "Tailine J. S. Nonato"
date: today
format: pdf
---

# Análise Exploratória SAEB 2019

```{r}
#| label: pacotes

if (!require(pacman)) install.packages("pacman")
pacman::p_load(vroom,tidyverse, knitr, kableExtra, corrplot)#gridExtra, clipr
setwd("C:/Users/User/Documents/GitHub/gradest-1/TCC/relatorio")
```

```{r}	
#| label: reading_data

df <- vroom('C:/Users/User/Documents/GitHub/gradest-1/TCC/relatorio/DADOS/df_used.csv')
set.seed(123)
df_sampled <- df %>% sample_n(5000)
```

```{r}
#| label: theme


theme_tcc <- function() {
  theme_classic() +
    theme(
      axis.line = element_line(colour = "black"),
      panel.border = element_rect(colour = "black", fill=NA),
      panel.background = element_blank(),
      plot.background = element_blank(),
      axis.ticks = element_line(colour = "black"),
      panel.grid.major = element_blank(),
      panel.grid.minor = element_blank(),
      axis.text = element_text(colour = "black", size=16),
      axis.title = element_text(colour="black", size=18),
    )}
```	


```{r}	
#| label: mt_x_nse_aluno

df %>% 
    ggplot(aes(x = NSE_ALUNO, y = PROFICIENCIA_MT_SAEB)) +
    geom_point(alpha = 0.5) +
    labs(x = "Nível Socioeconômico do Aluno",
         y = "Matemática") +
    theme_tcc()
ggsave("EDA/img/new_scatterplot_mt_nse_aluno.pdf", width = 8, height = 5, dpi = 300)
```	


```{r}	
#| label: mt_x_nse_escola

df %>%
    filter(!is.na(NSE_ESCOLA)) %>%
    ggplot(aes(x = as.factor(NSE_ESCOLA), y = PROFICIENCIA_MT_SAEB)) +
    geom_boxplot(fill = "white") +
    labs(x = "Nível Socioeconômico da Escola",
         y = "Matemática") +
    ylim(100,400)+
    theme_tcc()
ggsave("EDA/img/new_boxplot_mt_nse_esc.pdf", width = 8, height = 5, dpi = 300)
```	


```{r}	
#| label: mt_x_grupo_racial

df %>%
    ggplot(aes(x = as.factor(GRUPO_RACIAL), y = PROFICIENCIA_MT_SAEB)) +
    geom_boxplot(fill = "white") +
    labs(x = "Grupo Racial",
         y = "Matemática") +
    ylim(100,400)+
    theme_tcc()
ggsave("EDA/img/new_boxplot_mt_racial.pdf", width = 8, height = 5, dpi = 300)
```	


```{r}	
#| label: mt_x_escolaridade_mae
df %>%
    ggplot(aes(x = as.factor(ESCOLARIDADE_MAE), y = PROFICIENCIA_MT_SAEB)) +
    geom_boxplot(fill = "white") +
    labs(x = "Escolaridade da Mãe",
         y = "Matemática") +
    ylim(100,400)+
    theme_tcc()
ggsave("EDA/img/new_boxplot_mt_esc_mae.pdf", width = 8, height = 5, dpi = 300)
```	


```{r}	
#| label: mt_x_reprovacao
df %>%
    ggplot(aes(x = as.factor(REPROVACAO), y = PROFICIENCIA_MT_SAEB)) +
    geom_boxplot(fill = "white") +
    labs(x = "Reprovação",
         y = "Matemática") +
    ylim(100,400)+
    theme_tcc()
ggsave("EDA/img/new_boxplot_mt_reprovacao.pdf", width = 8, height = 5, dpi = 300)
```	


```{r}	
#| label: mt_x_area
df %>%
    mutate(ID_AREA = ifelse(ID_AREA == 1, "Capital", "Interior")) %>%
    ggplot(aes(x = as.factor(ID_AREA), y = PROFICIENCIA_MT_SAEB)) +
    geom_boxplot(fill = "white") +
    labs(x = "Área",
         y = "Matemática") +
    ylim(100,400)+
    theme_tcc()
ggsave("EDA/img/new_boxplot_mt_area.pdf", width = 8, height = 5, dpi = 300)
```	


```{r}	
#| label: mt_x_loc
df %>%
    mutate(ID_LOCALIZACAO = ifelse(ID_LOCALIZACAO == 1, "Urbana", "Rural")) %>%
    ggplot(aes(x = as.factor(ID_LOCALIZACAO), y = PROFICIENCIA_MT_SAEB)) +
    geom_boxplot(fill = "white") +
    labs(x = "Localização",
         y = "Matemática") +
    ylim(100,400)+
    theme_tcc()
ggsave("EDA/img/new_boxplot_mt_loc.pdf", width = 8, height = 5, dpi = 300)
```

## Visão geral das escolas

### Quantidade de Escolas
```{r}	 
#| warning: false
#| eval: false
#| message: false

df %>% 
    summarise(n = n_distinct(ID_ESCOLA))
```

### Quantidade de Alunos por Escola
```{r}
#| warning: false
#| label: alunos_escola

df %>%
    group_by(ID_ESCOLA) %>%
    summarise(n = n()) %>%
    ggplot(aes(x = n)) +
    geom_histogram(binwidth = 10, fill = "white", color="black") +
    labs(x = "",
         y = "Frequência") +
  theme_tcc()
ggsave("EDA/img/dist_alunos_escola.pdf", width = 8, height = 5, dpi = 300)

# quadro resumo
df %>%
  group_by(ID_ESCOLA) %>%
  summarise(n = n()) %>%
  summarise(
    Média = mean(n),
    `Desvio Padrão` = sd(n),
    Mínimo = min(n),
    `Primeiro Quartil` = quantile(n, 0.25),
    Mediana = median(n),
    `Terceiro Quartil` = quantile(n, 0.75),
    Máximo = max(n)
  ) %>%
  mutate(across(everything(), ~format(round(., 2), nsmall = 2))) %>%
  pivot_longer(everything(), names_to = "Estatística", values_to = "Número de Alunos por Escola") %>%
  kable(booktabs = TRUE, caption = "Summary Statistics for Number of Students per School", format = "latex")
```	

### Nível Socioecononômico (NSe) das Escolas
```{r}
#| warning: false
#| label: nse_escola

df %>% 
    group_by(ID_ESCOLA) %>%
    ggplot(aes(x = NSE_ESCOLA)) +
    geom_bar(fill = "white", color="black") +
    scale_x_continuous(breaks = seq(1, 7, 1)) +
    labs(x = "Nível Socioeconômico da Escola",
         y = "Frequência") +
    theme_tcc()
ggsave("EDA/img/dist_nse_escola.pdf", width = 8, height = 5, dpi = 300)
```

### Área das Escolas
```{r}
#| warning: false
#| label: area_escola

df %>% 
    mutate(ID_AREA = ifelse(ID_AREA == 1, "Capital", "Interior")) %>% 
    ggplot(aes(x = ID_AREA)) +
    geom_bar(fill = "white", color="black") +
    labs(x = "Área",
         y = "Frequência") +
    theme_tcc()
ggsave("EDA/img/dist_area_escola.pdf", width = 8, height = 5, dpi = 300)
```

### Localização das Escolas
```{r}
#| warning: false
#| label: loc_escola

df %>% 
    mutate(ID_LOCALIZACAO = ifelse(ID_LOCALIZACAO == 1, "Urbana", "Rural")) %>% 
    ggplot(aes(x = ID_LOCALIZACAO)) +
    geom_bar(fill = "white", color="black") +
    labs(x = "Localização",
         y = "Frequência") +
    theme_tcc()
ggsave("EDA/img/dist_loc_escola.pdf", width = 8, height = 5, dpi = 300)

```

## Proficiência em Matemática
```{r}
#| label: mt_dist_proficiencia

#matemática (ggplot histogram)
df %>%
    ggplot(aes(x = PROFICIENCIA_MT_SAEB)) +
    geom_histogram(binwidth = 10,  fill = "white", color="black") +
    labs(x = "Matemática",
         y = "Frequência") +
    xlim(100,400)+
    ylim(0,13000)+
  theme_tcc()
ggsave("EDA/img/dist_mt.pdf", width = 5, height = 5, dpi = 300)

#matematica (qqplot)
df_sampled %>% 
  ggplot(aes(sample = PROFICIENCIA_MT_SAEB)) +
  stat_qq() +
  geom_abline(slope = 1, intercept = 0, color = "red") +
  labs(x = "Quantis teóricos", y = "Quantis amostrais") +
  ylim(100,400)+
  theme_tcc()
ggsave("EDA/img/qqplot_mt.pdf", width = 5, height = 5, dpi = 300)

#matematica (boxplot)
df %>%
    ggplot(aes(y = PROFICIENCIA_MT_SAEB)) +
  geom_boxplot(fill = "white") +
  labs(x = "Matemática", y="") +
  scale_x_discrete(labels = c("Matemática")) +
  ylim(100,400)+
  theme_tcc()
ggsave("EDA/img/boxplot_mt.pdf", width = 5, height = 5, dpi = 300)
```

### Quadro Resumo  da proficiência em Língua Portuguesa e Matemática
```{r}
#| label: summary_stats

lp_stats <- summarise(df,
  Média = mean(PROFICIENCIA_LP_SAEB, na.rm = TRUE),
  `Desvio Padrão` = sd(PROFICIENCIA_LP_SAEB, na.rm = TRUE),
  Mínimo = min(PROFICIENCIA_LP_SAEB, na.rm = TRUE),
  `Primeiro Quartil` = quantile(PROFICIENCIA_LP_SAEB, 0.25, na.rm = TRUE),
  Mediana = median(PROFICIENCIA_LP_SAEB, na.rm = TRUE),
  `Terceiro Quartil` = quantile(PROFICIENCIA_LP_SAEB, 0.75, na.rm = TRUE),
  Máximo = max(PROFICIENCIA_LP_SAEB, na.rm = TRUE)
) %>% pivot_longer(everything(), names_to = "Estatística", values_to = "Língua Portuguesa")

mt_stats <- summarise(df,
  Média = mean(PROFICIENCIA_MT_SAEB, na.rm = TRUE),
  `Desvio Padrão` = sd(PROFICIENCIA_MT_SAEB, na.rm = TRUE),
  Mínimo = min(PROFICIENCIA_MT_SAEB, na.rm = TRUE),
  `Primeiro Quartil` = quantile(PROFICIENCIA_MT_SAEB, 0.25, na.rm = TRUE),
  Mediana = median(PROFICIENCIA_MT_SAEB, na.rm = TRUE),
  `Terceiro Quartil` = quantile(PROFICIENCIA_MT_SAEB, 0.75, na.rm = TRUE),
  Máximo = max(PROFICIENCIA_MT_SAEB, na.rm = TRUE)
) %>% pivot_longer(everything(), names_to = "Estatística", values_to = "Matemática")

combined_stats <- full_join(lp_stats, mt_stats, by = "Estatística")

combined_stats <- combined_stats %>% mutate(across(where(is.numeric), ~format(round(., 2), nsmall = 2, decimal.mark = ",")))

combined_stats %>%
  kable(booktabs = TRUE, caption = "Summary Statistics for Língua Portuguesa and Matemática", format="latex") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F, font_size = 12) %>%
  scroll_box(width = "100%", height = "500px")
```


## Proficiência em Língua Portuguesa


```{r}
#| label: lp_dist_proficiencia
#lingua portuguesa (ggplot histogram)
df %>%
    ggplot(aes(x = PROFICIENCIA_LP_SAEB)) +
    geom_histogram(binwidth = 10,  fill = "white", color="black") +
    labs(x = "Língua Portuguesa",
         y = "Frequência") +
    xlim(100,400)+
    ylim(0,13000)+
    theme_tcc()
ggsave("EDA/img/dist_lp.pdf", width = 5, height = 5, dpi = 300)

#lingua portuguesa (qqplot)
df_sampled %>% 
  ggplot(aes(sample = PROFICIENCIA_LP_SAEB)) +
  stat_qq() +
  labs(x = "Quantis teóricos", y = "Quantis amostrais") +
  ylim(100,400)+
  theme_tcc()
ggsave("EDA/img/qqplot_lp.pdf", width = 5, height = 5, dpi = 300)

#lingua portuguesa (boxplot)
df %>%
    ggplot(aes(y = PROFICIENCIA_MT_SAEB)) +
  geom_boxplot(fill = "white") +
  labs(x = "Língua Portuguesa", y="") +
  scale_x_discrete(labels = c("Língua Portuguesa")) +
  ylim(100,400)+
  theme_tcc()
ggsave("EDA/img/boxplot_lp.pdf", width = 5, height = 5, dpi = 300)
```	


### Correlação entre as variáveis
```{r}
#| warning: false
#| label: correlacoes

# between pont and PROFICIENCIA_MT_SAEB
df %>%
  select(pont, PROFICIENCIA_MT_SAEB) %>%
  cor()

# between pont and PROFICIENCIA_LP_SAEB
df %>%
  select(pont, PROFICIENCIA_LP_SAEB) %>%
  cor()

# between NSE_pont and PROFICIENCIA_MT_SAEB
df %>%
  select(NSE_pont, PROFICIENCIA_MT_SAEB) %>%
  cor()

# between NSE_pont and PROFICIENCIA_LP_SAEB
df %>%
  select(NSE_pont, PROFICIENCIA_LP_SAEB) %>%
  cor()

# between NSE_pont and pont
df %>%
  select(NSE_pont, pont) %>%
  cor()

# escolaridade e PROFICIENCIA_MT_SAEB
df %>%
  select(escolaridade, PROFICIENCIA_MT_SAEB) %>%
  cor()

# escolaridade e PROFICIENCIA_LP_SAEB
df %>%
  select(escolaridade, PROFICIENCIA_LP_SAEB) %>%
  cor()

## correlation plot
correlation_matrix <- df %>%
  select(pont, NSE_pont, PROFICIENCIA_MT_SAEB, PROFICIENCIA_LP_SAEB, escolaridade) %>%
  cor()

correlation_matrix %>%
  corrplot::corrplot(method = "color", type = "upper", addCoef.col = "black", tl.col = "black", tl.srt = 45)
```



